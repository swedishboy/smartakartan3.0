# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/SmartMap.Solution.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: 'Restore dependencies'
  inputs:
    restoreSolution: '$(solution)'

- task: NodeTool@0 
  displayName: 'Node'
  inputs:
    versionSpec: '13.x' # replace this value with the version that you need for your project

- script: |
    cd Source
    cd SmartMap.Web
    cd wwwroot
    npm install
  displayName: 'Npm install'

- script: |
    cd Source
    cd SmartMap.Web
    cd wwwroot
    npm run build
  displayName: 'Npm build'

- task: CopyFiles@2
  displayName: Copy js and css files
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)\Source\SmartMap.Web\wwwroot'
    Contents: |
      dist\*.*
    TargetFolder: '$(Build.ArtifactStagingDirectory)\Source\SmartMap.Web\wwwroot'

- task: DotNetCoreCLI@2
  displayName: 'Build web project'
  inputs:
    command: 'build'
    projects: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'Publish and zip'
  inputs:
    command: publish
    publishWebProjects: False
    projects: '$(solution)'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: AzureWebApp@1
  displayName: 'Deploy Azure Web App'
  inputs:
    azureSubscription: 'Free Trial(ec7d5fa5-2253-42ce-8903-d896edb90cc2)'
    appType: 'webAppLinux'
    appName: 'rise-circular'
    package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    runtimeStack: 'DOTNETCORE|3.1'
    startUpCommand: 'dotnet SmartMap.Web.dll'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'